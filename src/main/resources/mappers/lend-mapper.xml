<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Lend">
	<resultMap type="HashMap" id="LendDTO">
		<result column="seq" property="seq" />
		<result column="writer" property="writer" />
		<result column="title" property="title" />
		<result column="category" property="category" />
		<result column="contents" property="contents" />
		<result column="price" property="price" />
		<result column="address" property="address" />
		<result column="regdate" property="regdate" />
		<result column="sysName" property="sysName" />
	</resultMap>

	<!-- 게시글 상세보기 -->
	<select id="detailView" resultType="kh.spring.dto.LendDTO">
	select * from lendboard where seq=#{value}
	</select>
	
	<select id="detailViewPic" resultMap="LendDTO" resultType="HashMap" >
		select * from lendboard lb
		left join (
		select SYSNAME, PARENTSEQ, REGDATE from (
		select ROW_NUMBER() over (PARTITION BY lendfiles.PARENTSEQ order by
		lendfiles.REGDATE asc ) AS RNUM, lendfiles.* from lendfiles ) TB
		where RNUM=1 ) lf on lb.SEQ=lf.PARENTSEQ where lb.writer =#{writer} and 
		seq =#{seq}
	</select>
	
	
	<!-- 게시글번호 -->
	<select id="getSeq" resultType="int">
		select lendboard_seq.nextval from
		dual
	</select>

	<!-- 게시글 글쓰기 -->
	<insert id="write">
		insert into lendboard
		values(#{seq},#{writer},#{title},#{category},#{contents},#{price},#{address},sysdate)
	</insert>

	<!-- 게시글 수정 -->
	<update id="modify">
		update lendboard set title=#{title},
		category=#{category}, contents=#{contents}, price=#{price},
		address=#{address} where seq=#{seq}
	</update>

	<!-- 게시글 삭제 -->
	<delete id="delete">
		delete from lendboard where seq=#{seq}
	</delete>

	<!-- 전체 검색 지역 & 타이틀 & 내용 & 카테고리 -->
	<select id="toSearch" resultType="HashMap" resultMap="LendDTO">
		<![CDATA[select * from (select rownum as rnum, A.* from (select lb.*, lf.SYSNAME from lendboard lb left join (
				select SYSNAME, PARENTSEQ, REGDATE from (
				select ROW_NUMBER() over (PARTITION BY lendfiles.PARENTSEQ order by lendfiles.REGDATE asc ) AS RNUM, lendfiles.* from lendfiles ) TB
				where RNUM=1 ) lf on lb.SEQ=lf.PARENTSEQ where address like '%'||#{search}||'%' or title like '%'||#{search}||'%' or contents like '%'||#{search}||'%' or category like '%'||#{search}||'%' order by SEQ desc)A where ROWNUM <= #{endNum}) where rnum >= #{startNum}]]>
	</select>
	<!-- 주소 검색 -->
	<select id="toAddress" resultType="HashMap" resultMap="LendDTO">
		<![CDATA[select * from (select rownum as rnum, A.* from (select lb.*, lf.SYSNAME from lendboard lb left join (
				select SYSNAME, PARENTSEQ, REGDATE from (
				select ROW_NUMBER() over (PARTITION BY lendfiles.PARENTSEQ order by lendfiles.REGDATE asc ) AS RNUM, lendfiles.* from lendfiles ) TB
				where RNUM=1 ) lf on lb.SEQ=lf.PARENTSEQ where address like '%'||#{search}||'%' order by SEQ desc)A where ROWNUM <= #{endNum}) where rnum >= #{startNum}]]>
	</select>

	<!-- 타이틀 검색 -->
	<select id="toTitle" resultType="HashMap" resultMap="LendDTO">
		<![CDATA[select * from (select rownum as rnum, A.* from (select lb.*, lf.SYSNAME from lendboard lb left join (
				select SYSNAME, PARENTSEQ, REGDATE from (
				select ROW_NUMBER() over (PARTITION BY lendfiles.PARENTSEQ order by lendfiles.REGDATE asc ) AS RNUM, lendfiles.* from lendfiles ) TB
				where RNUM=1 ) lf on lb.SEQ=lf.PARENTSEQ where title like '%'||#{search}||'%' order by SEQ desc)A where ROWNUM <= #{endNum}) where rnum >= #{startNum}]]>
	</select>

	<!-- 컨텐츠 검색 -->
	<select id="toContents" resultType="HashMap" resultMap="LendDTO">
		<![CDATA[select * from (select rownum as rnum, A.* from (select lb.*, lf.SYSNAME from lendboard lb left join (
				select SYSNAME, PARENTSEQ, REGDATE from (
				select ROW_NUMBER() over (PARTITION BY lendfiles.PARENTSEQ order by lendfiles.REGDATE asc ) AS RNUM, lendfiles.* from lendfiles ) TB
				where RNUM=1 ) lf on lb.SEQ=lf.PARENTSEQ where contents like '%'||#{search}||'%' order by SEQ desc)A where ROWNUM <= #{endNum}) where rnum >= #{startNum}]]>
	</select>
	<!-- 카테고리 검색 -->
	<select id="toCategory" resultType="HashMap" resultMap="LendDTO">
		<![CDATA[select * from (select rownum as rnum, A.* from (select lb.*, lf.SYSNAME from lendboard lb left join (
				select SYSNAME, PARENTSEQ, REGDATE from (
				select ROW_NUMBER() over (PARTITION BY lendfiles.PARENTSEQ order by lendfiles.REGDATE asc ) AS RNUM, lendfiles.* from lendfiles ) TB
				where RNUM=1 ) lf on lb.SEQ=lf.PARENTSEQ where category like '%'||#{search}||'%' order by SEQ desc)A where ROWNUM <= #{endNum}) where rnum >= #{startNum}]]>
	</select>

	<!-- 검색이 null일 경우 전체목록 나오게 -->
	<select id="toList" resultType="HashMap" resultMap="LendDTO">
		<![CDATA[select * from (select rownum as rnum, A.* from (select lb.*, lf.SYSNAME from lendboard lb left join (
				select SYSNAME, PARENTSEQ, REGDATE from (
				select ROW_NUMBER() over (PARTITION BY lendfiles.PARENTSEQ order by lendfiles.REGDATE asc ) AS RNUM, lendfiles.* from lendfiles ) TB
				where RNUM=1 ) lf on lb.SEQ=lf.PARENTSEQ order by SEQ desc)A where ROWNUM <= #{endNum}) where rnum >= #{startNum}]]>
	</select>

	<!-- 검색 지역 & 타이틀 & 컨텐츠 카운트 -->
	<select id="allList" resultType="int">
		select count(*) from lendboard
	</select>

	<!-- 검색 지역 & 타이틀 & 컨텐츠 카운트 -->
	<select id="numAllList" resultType="int">
		select count(*) from
		lendboard l inner join lendfiles f on l.seq = f.parentSeq
		where l.address like '%'||#{value}||'%' or l.title like
		'%'||#{value}||'%'
		or l.contents like '%'||#{value}||'%' or l.category
		like
		'%'||#{value}||'%'
	</select>

	<!-- 검색 지역 카운트 -->
	<select id="numAddress" resultType="int">
		select count(*) from
		lendboard where address like '%'||#{value}||'%'
	</select>

	<!-- 검색 타이틀 카운트 -->
	<select id="numTitle" resultType="int">
		select count(*) from lendboard
		where title like '%'||#{value}||'%'
	</select>

	<!-- 검색 컨텐츠 카운트 -->
	<select id="numContents" resultType="int">
		select count(*) from
		lendboard where contents like '%'||#{value}||'%'
	</select>

	<!-- 검색 컨텐츠 카운트 -->
	<select id="numCategory" resultType="int">
		select count(*) from
		lendboard where category like '%'||#{value}||'%'
	</select>

	<!-- 판매자 찾기 -->
	<select id="getId" resultType="String">
		select writer from lendboard where
		seq=#{value}
	</select>


	<select id="isitLend" resultType="int">
		select count(*) from lendboard
		where writer=#{writer} and seq=#{seq} and
		category=#{category}
	</select>

	<!-- 마이페이지 내 게시물 대여하기 출력 -->
	<select id="myRequestSellProduct"
		resultType="kh.spring.dto.LendDTO">
		select * from lendboard where writer=#{value} order by 1
		desc
	</select>


</mapper>